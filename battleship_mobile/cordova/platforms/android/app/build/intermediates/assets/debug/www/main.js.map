{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/board.ts","webpack:///./src/app/components/administration/administration.component.css","webpack:///./src/app/components/administration/administration.component.html","webpack:///./src/app/components/administration/administration.component.ts","webpack:///./src/app/components/chat/chat.component.css","webpack:///./src/app/components/chat/chat.component.html","webpack:///./src/app/components/chat/chat.component.ts","webpack:///./src/app/components/game/game.component.css","webpack:///./src/app/components/game/game.component.html","webpack:///./src/app/components/game/game.component.ts","webpack:///./src/app/components/leaderboard/leaderboard.component.css","webpack:///./src/app/components/leaderboard/leaderboard.component.html","webpack:///./src/app/components/leaderboard/leaderboard.component.ts","webpack:///./src/app/components/search/search.component.css","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/components/user-login/user-login.component.css","webpack:///./src/app/components/user-login/user-login.component.html","webpack:///./src/app/components/user-login/user-login.component.ts","webpack:///./src/app/components/user-signup/user-signup.component.css","webpack:///./src/app/components/user-signup/user-signup.component.html","webpack:///./src/app/components/user-signup/user-signup.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/can-deactivate.guard.ts","webpack:///./src/app/player.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/board.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/token-interceptor.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"button {\\r\\n    min-width: 200px;\\r\\n    border-radius: 10px;\\r\\n    background-color: gainsboro;\\r\\n    margin: 5px;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\\r\\n}\"","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n    <h1>Benvenuto nel gioco di Battaglia Navale!</h1>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"text-align:center\\\">\\r\\n    <button *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</button>\\r\\n    <button *ngIf=\\\"!_authService.loggedIn()\\\" routerLink=\\\"/signup\\\" routerLinkActive=\\\"active\\\">Registrati</button>\\r\\n    <button *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/game\\\" routerLinkActive=\\\"active\\\">Gioca!</button>\\r\\n    <button *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/leaderboard\\\" routerLinkActive=\\\"active\\\">Classifiche</button>\\r\\n    <button *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/search\\\" routerLinkActive=\\\"active\\\">Ricerca Utente</button>\\r\\n    <button *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/chat\\\" routerLinkActive=\\\"active\\\">Chat</button>\\r\\n    <button *ngIf=\\\"_authService.loggedIn() && _authService.isAdmin()\\\" routerLink=\\\"/administration\\\" routerLinkActive=\\\"active\\\">Gestione Profili</button>\\r\\n    <button *ngIf=\\\"_authService.loggedIn()\\\" routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\" (click)=\\\"_authService.logoutUser()\\\">Logout</button>\\r\\n</div>\\r\\n\\r\\n<hr>\\r\\n\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n  constructor (private _authService: AuthService)  {}\r\n\r\n\r\n\r\n    \r\n  \r\n}\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { DataService } from './services/data.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http'; \r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LeaderboardComponent } from './components/leaderboard/leaderboard.component';\r\nimport { UserLoginComponent } from './components/user-login/user-login.component';\r\nimport { AuthService } from './services/auth.service';\r\nimport { UserSignupComponent } from './components/user-signup/user-signup.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { CanDeactivateGuard} from './guards/can-deactivate.guard'\r\nimport { TokenInterceptorService} from './services/token-interceptor.service';\r\nimport { AdministrationComponent } from './components/administration/administration.component';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\nimport { GameComponent } from './components/game/game.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'login', component: UserLoginComponent },\r\n  { path: 'leaderboard', component: LeaderboardComponent, canActivate: [AuthGuard]},\r\n  { path: 'signup', component: UserSignupComponent },\r\n  { path: 'administration', component: AdministrationComponent, canActivate: [AuthGuard]},\r\n  { path: 'chat', component: ChatComponent, canActivate: [AuthGuard]},\r\n  { path: 'game', component: GameComponent, canActivate: [AuthGuard], canDeactivate: [CanDeactivateGuard]},\r\n  { path: 'search', component: SearchComponent, canActivate: [AuthGuard]},\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LeaderboardComponent,\r\n    UserLoginComponent,\r\n    UserSignupComponent,\r\n    AdministrationComponent,\r\n    ChatComponent,\r\n    GameComponent,\r\n    SearchComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(\r\n      appRoutes)\r\n\r\n  ],\r\n  providers: [DataService, AuthService, AuthGuard, CanDeactivateGuard,\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass:TokenInterceptorService,\r\n    multi: true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Player } from './player'\r\n\r\nexport class Board {\r\n  player: Player;\r\n  tiles: Object[];\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}","module.exports = \"button {\\r\\n    min-width: 100px;\\r\\n    border-radius: 10px;\\r\\n    background-color: gainsboro;\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n    text-align: center;\\r\\n    font-size: 40px;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n    margin-left: 10px;\\r\\n    font-size: 25px;\\r\\n}\\r\\n\\r\\n.statistiche {\\r\\n    display: inline-block;\\r\\n    text-align: center;\\r\\n    min-width: 20%\\r\\n}\\r\\n\\r\\n.status {\\r\\n    display: inline-block;\\r\\n    text-align: center;\\r\\n    min-width: 8% !important;\\r\\n}\\r\\n\\r\\n#username {\\r\\n    font-size: 25px;\\r\\n}\"","module.exports = \"<h2>Lista Utenti</h2>\\r\\n\\r\\n<hr>\\r\\n\\r\\n<div class=\\\"statistiche\\\">\\r\\n    <h3>Username</h3>\\r\\n</div>\\r\\n<div class=\\\"statistiche\\\">\\r\\n    <h3>Email</h3>\\r\\n</div>\\r\\n<div class=\\\"statistiche\\\">\\r\\n    <h3>User Id</h3>\\r\\n</div>\\r\\n<div class=\\\"statistiche\\\">\\r\\n    <h3>Status</h3>\\r\\n</div>\\r\\n\\r\\n<hr>\\r\\n\\r\\n<div class=\\\"info\\\" *ngFor=\\\"let user of users\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"statistiche\\\">\\r\\n        <p id=\\\"username\\\"><strong>{{user.username}}</strong></p>\\r\\n    </div>\\r\\n    <div class=\\\"statistiche\\\">\\r\\n        <p>{{user.email}} </p>\\r\\n    </div>\\r\\n    <div class=\\\"statistiche\\\">\\r\\n        <p>{{user._id}} </p>\\r\\n    </div>\\r\\n    <div class=\\\"statistiche\\\" *ngIf=\\\"user.isAdmin\\\">\\r\\n        <p>Admin</p>\\r\\n    </div>\\r\\n    <div class=\\\"statistiche\\\" *ngIf=\\\"!user.isAdmin\\\">\\r\\n        <p>Utente</p>\\r\\n    </div>\\r\\n    <button class=\\\"status\\\" (click)='delete(user._id)'>Elimina</button>\\r\\n    <button class=\\\"status\\\" *ngIf=\\\"!user.isAdmin\\\" (click)='upgrade(user.username)'>Upgrade</button>\\r\\n    <button class=\\\"status\\\" *ngIf=\\\"user.isAdmin\\\" (click)='downgrade(user.username)'>Downgrade</button>\\r\\n\\r\\n    <hr>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IUser} from '../../Interfaces/iuser'\r\nimport { DataService } from '../../services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-administration',\r\n  templateUrl: './administration.component.html',\r\n  styleUrls: ['./administration.component.css']\r\n})\r\nexport class AdministrationComponent implements OnInit {\r\n\r\n  constructor( public data:DataService) { }\r\n    users: IUser[];\r\n\r\n  // Cancella Utente\r\n  delete(id: string){\r\n    this.data.userDelete(id);\r\n    location.reload();\r\n  }\r\n\r\n  // Setta isAdmin a true\r\n  upgrade(username : string) {\r\n    this.data.upgradeUser(username);\r\n    location.reload();\r\n  }\r\n\r\n  // Setta isAdmin a false\r\n  downgrade(username : string) {\r\n    this.data.downgradeUser(username);\r\n    location.reload();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    // Restituisce la lista Utenti\r\n    this.data.getUsers().subscribe((data: any) => {\r\n      console.log(data);\r\n      this.users = data.user;\r\n  })\r\n\r\n  } \r\n}\r\n","module.exports = \"/*  FORM  */\\r\\n\\r\\ntextarea {\\r\\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\r\\n    display: block;\\r\\n    padding: 10px;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.12), 0 2px 4px 0 rgba(0, 0, 0, 0.08);\\r\\n    min-width: 200px;\\r\\n    border: none;\\r\\n    resize: none;\\r\\n}\\r\\n\\r\\ninput[type=submit] {\\r\\n    border-radius: 38px;\\r\\n    background-color: gainsboro;\\r\\n    min-width: 200px;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #bbb;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.12), 0 2px 4px 0 rgba(0, 0, 0, 0.08);\\r\\n}\\r\\n\\r\\n#form {\\r\\n    background-color: #f3f3f3;\\r\\n    padding: 50px;\\r\\n}\\r\\n\\r\\n#form .flex {\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n#form label {\\r\\n    min-width: 150px;\\r\\n}\\r\\n\\r\\n.recipient {\\r\\n    display: block;\\r\\n    padding: 10px;\\r\\n    min-width: 200px;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.12), 0 2px 4px 0 rgba(0, 0, 0, 0.08);\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n/*  CHATSSS  */\\r\\n\\r\\n.flex {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.chats {\\r\\n    flex: 0;\\r\\n}\\r\\n\\r\\n.chats .button {\\r\\n    -webkit-user-select: none;\\r\\n       -moz-user-select: none;\\r\\n        -ms-user-select: none;\\r\\n            user-select: none;\\r\\n    text-transform: capitalize;\\r\\n    cursor: pointer;\\r\\n    text-align: center;\\r\\n    padding: 10px;\\r\\n    min-width: 200px;\\r\\n    background-color: #fff;\\r\\n    border-bottom: 1px solid gainsboro;\\r\\n}\\r\\n\\r\\n.chats .button:first-child {\\r\\n    border-top: 1px solid gainsboro;\\r\\n}\\r\\n\\r\\n.chats .button:hover {\\r\\n    background-color: #eee;\\r\\n}\\r\\n\\r\\n.chats .button.selected {\\r\\n    background-color: #e0e0e0;\\r\\n}\\r\\n\\r\\n.messages {\\r\\n    flex: 1;\\r\\n}\\r\\n\\r\\n.message {\\r\\n    position: relative;\\r\\n    border-bottom: 1px solid gainsboro;\\r\\n    border-left: 1px solid gainsboro;\\r\\n    padding: 10px;\\r\\n    word-wrap: break-word;\\r\\n    max-width: 1670px;\\r\\n}\\r\\n\\r\\n.message:first-child {\\r\\n    border-top: 1px solid gainsboro;\\r\\n}\\r\\n\\r\\n.message .author {\\r\\n    font-weight: bold;\\r\\n    text-transform: capitalize;\\r\\n    margin-bottom: 3px;\\r\\n}\\r\\n\\r\\n.message .content {\\r\\n    color: #333;\\r\\n}\\r\\n\\r\\n.message .date {\\r\\n    position: absolute;\\r\\n    right: 10px;\\r\\n    top: 10px;\\r\\n    font-size: 80%;\\r\\n    color: #999;\\r\\n}\"","module.exports = \"<div id=\\\"form\\\">\\r\\n    <form>\\r\\n\\r\\n        <div class=\\\"flex\\\">\\r\\n            <label class=\\\"lbl-recipient\\\">Destinatario</label>\\r\\n\\r\\n            <input type=\\\"text\\\" class=\\\"recipient\\\" placeholder=\\\"Inserisci Destinatario\\\" [(ngModel)]=\\\"messageData.recipient\\\" name=\\\"recipient\\\" required>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"flex\\\">\\r\\n            <label class=\\\"lbl-message\\\">Messaggio</label>\\r\\n\\r\\n            <textarea type=\\\"text\\\" rows=\\\"5\\\" cols=\\\"80\\\" [(ngModel)]=\\\"messageData.payload\\\" name=\\\"payload\\\" required></textarea>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"flex\\\">\\r\\n            <label> </label>\\r\\n\\r\\n            <input type=\\\"submit\\\" (click)=\\\"postMessage()\\\">\\r\\n        </div>\\r\\n\\r\\n        <h2 id=\\\"error\\\" style=\\\"color:red\\\"></h2>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n<h2>Ecco le tue Chat</h2>\\r\\n\\r\\n<div class=\\\"flex \\\">\\r\\n    <div class=\\\"chats\\\">\\r\\n        <div class=\\\"button\\\" [ngClass]=\\\"{'selected': chat == active}\\\" (click)=\\\"showMessages(chat)\\\" *ngFor=\\\"let chat of chats\\\">\\r\\n            <div *ngIf=\\\"\\\"></div>\\r\\n            {{chat}}\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"messages\\\">\\r\\n        <div class=\\\"message\\\" *ngFor=\\\"let message of messages\\\">\\r\\n            <div class=\\\"author\\\">{{message.sender}}</div>\\r\\n            <div class=\\\"date\\\">{{message.date}}</div>\\r\\n            <div class=\\\"content\\\">{{message.payload}}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../services/data.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { IMessage} from '../../interfaces/imessage'\r\n\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n\r\n  constructor(public data: DataService, public auth: AuthService) { }\r\n\r\n  messages: IMessage[];\r\n  chats : string[];\r\n  username: string = this.auth.getUsername();\r\n  active : string;\r\n  messageData = <any>{};\r\n  todayDate = new Date();\r\n  now = (this.todayDate.getHours() + ':' + this.todayDate.getMinutes() + ' ' \r\n              + this.todayDate.getDate() + '-' + ((this.todayDate.getMonth() + 1)) + '-' + this.todayDate.getFullYear());\r\n  \r\n  ngOnInit() {\r\n    console.log(this.username);\r\n    this.data.getChats(this.username).subscribe((data: any) => {\r\n      this.chats = data.message;\r\n      console.log(this.chats);\r\n    })\r\n  }\r\n\r\n  // Controlla se il destinatario è valido > mette dentro messageData le info che vanno mandate al server per creare un messaggio\r\n  postMessage() {\r\n    this.data.validRecipient(this.messageData.recipient, (isValid: boolean) => {\r\n      if (isValid) {\r\n        this.messageData.date = this.now;\r\n        this.messageData.sender = this.username;\r\n        this.data.sendMessage(this.messageData)\r\n          .subscribe(\r\n            res => {\r\n              console.log(this.messageData)\r\n              this.messageData.payload = \"\"\r\n            },\r\n            err =>{console.log(err)\r\n            document.getElementById(\"error\").innerText = \"Messaggio vuoto, prego inserire un messaggio\";\r\n            }\r\n          )\r\n      }\r\n      else {\r\n        document.getElementById(\"error\").innerText = \"Destinatario inesistente\";\r\n      }\r\n    });\r\n  }\r\n\r\n  // Restituisce i messaggi tra i 2 utenti\r\n  showMessages(username : string){\r\n    this.active = username;\r\n    this.data.getChatsMessages(this.username , username).subscribe((data : any) => {\r\n      this.messages = data.message\r\n      console.log(this.messages);\r\n    });\r\n  }\r\n}","module.exports = \"button {\\r\\n    border-radius: 10px;\\r\\n    background-color: gainsboro;\\r\\n    min-width: 250px;\\r\\n    margin: 5px;\\r\\n}\\r\\n\\r\\n.tabella table td,\\r\\n.tabella table th {\\r\\n    border: 1px solid black;\\r\\n    height: 50px;\\r\\n    min-width: 50px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.tabella table {\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.battleship-tile:hover {\\r\\n    cursor: crosshair;\\r\\n}\\r\\n\\r\\n.hit {\\r\\n    background-color: red !important;\\r\\n}\\r\\n\\r\\n.miss {\\r\\n    background-color: aqua !important;\\r\\n}\\r\\n\\r\\n.posizionamento {\\r\\n    text-align: center;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.spinner {\\r\\n    margin: 50px auto 50px;\\r\\n    min-width: 70px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.spinner>div {\\r\\n    min-width: 18px;\\r\\n    height: 18px;\\r\\n    background-color: #333;\\r\\n    border-radius: 100%;\\r\\n    display: inline-block;\\r\\n    -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\\r\\n    animation: sk-bouncedelay 1.4s infinite ease-in-out both;\\r\\n}\\r\\n\\r\\n.spinner .bounce1 {\\r\\n    -webkit-animation-delay: -0.32s;\\r\\n    animation-delay: -0.32s;\\r\\n}\\r\\n\\r\\n.spinner .bounce2 {\\r\\n    -webkit-animation-delay: -0.16s;\\r\\n    animation-delay: -0.16s;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes sk-bouncedelay {\\r\\n    0%,\\r\\n    80%,\\r\\n    100% {\\r\\n        -webkit-transform: scale(0)\\r\\n    }\\r\\n    40% {\\r\\n        -webkit-transform: scale(1.0)\\r\\n    }\\r\\n}\\r\\n\\r\\n@keyframes sk-bouncedelay {\\r\\n    0%,\\r\\n    80%,\\r\\n    100% {\\r\\n        -webkit-transform: scale(0);\\r\\n        transform: scale(0);\\r\\n    }\\r\\n    40% {\\r\\n        -webkit-transform: scale(1.0);\\r\\n        transform: scale(1.0);\\r\\n    }\\r\\n}\\r\\n\\r\\n.end-game {\\r\\n    display: inline-block;\\r\\n    min-width: 100%;\\r\\n    margin-top: 10%;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n    <!-- Se c'è un solo giocatore nella room -->\\r\\n    <div style=\\\"text-align:center\\\" *ngIf=\\\"players == false\\\">\\r\\n        <h2>Lobby creata, attendi un avversario...</h2>\\r\\n        <div class=\\\"spinner\\\">\\r\\n            <div class=\\\"bounce1\\\"></div>\\r\\n            <div class=\\\"bounce2\\\"></div>\\r\\n            <div class=\\\"bounce3\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- 1 Fase del gioco: Posizionamento navi -->\\r\\n    <div class=\\\"posizionamento\\\" *ngIf=\\\"!end && players && !gamedata.sent\\\">\\r\\n        <h2>Fase di Posiziamento - Posiziona le tue barche</h2>\\r\\n\\r\\n        <p *ngIf=\\\"ship_array.length > 0\\\">Stai posizionando la nave lunga <strong>{{ship_array[0]}}</strong></p>\\r\\n        <p *ngIf=\\\"ship_array.length == 0\\\">Hai terminato le tue barche da posizionare, <strong>completa la fase di posizionamento</strong> per proseguire</p>\\r\\n\\r\\n        <button *ngIf=\\\"players != false && !gamedata.sent\\\" id=\\\"cambio\\\" (click)=\\\"verPos($event)\\\">Stai posizionando in: Orizzontale</button>\\r\\n        <button *ngIf=\\\"ship_array.length < 9\\\" (click)=\\\"deleteShips()\\\">Rimuovi barche</button>\\r\\n        <button *ngIf=\\\"ship_array.length == 0\\\" (click)=\\\"submitBoard()\\\">Completa la fase di posizionamento</button>\\r\\n    </div>\\r\\n\\r\\n    <!-- Operazioni sulle barche -->\\r\\n    <div class=\\\"posizionamento\\\">\\r\\n        <h2 *ngIf=\\\"gamedata.sent && !gamedata.received\\\">Il tuo campo è stato inviato correttamente all'avversario! <br> Il gioco partirà non appena il tuo avversario finirà di posizionare le sue barche.</h2>\\r\\n\\r\\n        <div *ngIf=\\\"gamedata.sent && !gamedata.received\\\" class=\\\"spinner\\\">\\r\\n            <div class=\\\"bounce1\\\"></div>\\r\\n            <div class=\\\"bounce2\\\"></div>\\r\\n            <div class=\\\"bounce3\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!end\\\" class=\\\"tabella\\\">\\r\\n\\r\\n        <!-- Turni -->\\r\\n        <div class=\\\"posizionamento\\\" *ngIf=\\\"gamedata.received && gamedata.sent\\\">\\r\\n            <h3 *ngIf=\\\"gamedata.turno == gamedata.numeroGiocatore\\\"> E' il tuo turno! Fai la tua mossa</h3>\\r\\n            <h3 *ngIf=\\\"gamedata.turno != gamedata.numeroGiocatore\\\"> E' il turno dell'avversario</h3>\\r\\n        </div>\\r\\n\\r\\n        <!-- Campo Giocatore -->\\r\\n        <div *ngFor=\\\"let board of boards | slice:0:1; let i = index\\\">\\r\\n            <table>\\r\\n                <tr *ngFor=\\\"let row of board.tiles; let j = index\\\">\\r\\n                    <td *ngFor=\\\"let col of row; let k = index\\\" (click)=\\\"shipPositioning($event)\\\" [style.background-color]=\\\"col.value == 1 ? 'green' : 'transparent'\\\" [class.miss]=\\\"col.status == 'miss'\\\" [class.hit]=\\\"col.status =='hit'\\\" class=\\\"battleship-tile\\\" id=\\\"t{{i}}{{j}}{{k}}\\\">\\r\\n                        {{ col.value == \\\"1\\\" ? (col.status == \\\"hit\\\" ? \\\"💀\\\" : \\\"🚢\\\") : (col.status == \\\"miss\\\" ? \\\"⛶\\\" : (col.status == \\\"hit\\\" ? \\\"💀\\\" : \\\"🌊\\\")) }}\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n        <hr>\\r\\n\\r\\n        <!-- Campo Avversario -->\\r\\n        <div *ngIf=\\\"gamedata.received && gamedata.sent\\\">\\r\\n            <div *ngFor=\\\"let board of boards | slice:1:2; let i = index\\\">\\r\\n                <table>\\r\\n                    <tr *ngFor=\\\"let row of board.tiles; let j = index\\\">\\r\\n                        <td *ngFor=\\\"let col of row; let k = index\\\" (click)=\\\"onPlayerClick($event)\\\" [style.background-color]=\\\"col.used ? '' : 'transparent'\\\" class=\\\"battleship-tile\\\" id=\\\"t{{i}}{{j}}{{k}}\\\">\\r\\n                            {{ col.value == \\\"1\\\" ? (col.status == \\\"hit\\\" ? \\\"💀\\\" : \\\" \\\") : (col.status == \\\"miss\\\" ? \\\"⛶\\\" : (col.status == \\\"hit\\\" ? \\\"💀\\\" : \\\" \\\")) }}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Vittoria/Sconfitta -->\\r\\n    <div class=\\\"end-game\\\">\\r\\n        <h1 *ngIf=\\\"end && score == 27 \\\">Hai Vinto! Complimenti! <br> Per concludere la partita lascia questa pagina, grazie.</h1>\\r\\n        <h1 *ngIf=\\\"end && score < 27\\\">Mi spiace, hai perso! <br> Per concludere la partita lascia questa pagina, grazie.</h1>\\r\\n        <h1 *ngIf=\\\"end && score == 1000 \\\">Hai Vinto! Il tuo Avverario si è ritirato! <br> Per concludere la partita lascia questa pagina, grazie.</h1>\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component } from '@angular/core';\nimport { BoardService } from '../../services/board.service'\nimport { AuthService } from '../../services/auth.service';\nimport { DataService } from '../../services/data.service';\nimport io from 'socket.io-client';\nimport { Player } from '../../player';\nimport { Board } from '../../board'\n\nconst board_size: number = 10;\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css'],\n  providers: [BoardService]\n})\n\nexport class GameComponent {\n\n  players: boolean = false;\n  myBoard: object[];\n  end : boolean = false;\n  ver: boolean = false;\n  score: number = 0;\n\n  // Array delle barche\n  ship_array: any [] = [2, 2, 2, 2, 3, 3, 4, 4, 5];\n  //ship_array: any [] = [2, 3, 4];\n  ship_duplicate = this.ship_array.slice(0);\n\n  gamedata: any = {\n    socket: null,\n    numeroGiocatore: \"\",\n    turno : \"\",\n    sent: false,\n    received: false,\n    alone :false\n    \n  };\n\n  horPos : Function;\n  verPos : Function;\n  positionCheck: Function;\n  shipPositioning: Function;\n  onPlayerClick: Function;\n  submitPlayerClick: Function;\n\n  username: string = this.authService.getUsername();\n  id: string = this.authService.getId();\n  \n  constructor(\n    private boardService: BoardService,\n    private authService: AuthService,\n    public dataService : DataService\n  ) {}\n\n  ngOnInit(): void {\n\n    var self = this;\n\n    self.gamedata.turno = '1';\n\n    self.gamedata.socket = io.connect('http://10.0.2.2:3000');\n\n    self.gamedata.socket.on('connect', () => {\n      console.log('loggato');\n    })\n\n    // Crea la lobby > il primo giocatore è il numero 1 \n    self.gamedata.socket.on('create lobby', function (data) {\n      self.gamedata.gameId = data;\n      console.log(\"Lobby creata, gameId: \" + self.gamedata.gameId);\n      self.gamedata.numeroGiocatore = \"1\";\n      console.log(self.gamedata.numeroGiocatore);\n      self.gamedata.alone = true;\n\n      console.log(self.gamedata.alone);\n    });\n\n    // Joina una lobby esistente > ha numero giocatore =2\n    self.gamedata.socket.on('entering lobby', function (data) {\n      self.gamedata.gameId = data;\n      console.log(\"Lobby trovata, connessione alla partita: \" + self.gamedata.gameId);\n      if (self.gamedata.numeroGiocatore == \"\") {\n        self.gamedata.numeroGiocatore = \"2\";\n        console.log(self.gamedata.numeroGiocatore);\n        self.gamedata.socket.emit('on start');\n      }\n    });\n\n\n    // Creazione boards\n    self.gamedata.socket.on('on game start', function() {\n      self.players = true;\n      self.gamedata.alone = false;\n      console.log(\"La partita è cominciata!\");\n      this.myBoard = self.boardService.createBoard();\n      console.log(this.myBoard);\n    \n    });\n\n    // Ricezione board Avversario > aggiunta alla fine di Boards[]\n    self.gamedata.socket.on('receive board', function(data){\n      console.log('ricevo board');\n      let board = new Board({\n        Player : new Player ({id: self.id, username: self.username}),\n        tiles: data\n      });\n      self.boardService.boards.push(board);\n      console.log(data);\n      self.gamedata.received = true;\n    })\n\n    // Cambio turno da ricezione evento server\n    self.gamedata.socket.on('change turn', function(newTurn) {\n      self.gamedata.turno = newTurn;\n      console.log('Turno' + self.gamedata.turno);\n    }) \n\n    // Partita persa\n    self.gamedata.socket.on('on loss', function(data){\n      console.log(data + ' ha vinto la partita');\n      self.end = true;\n      self.dataService.patchDefeat(self.username);\n    })\n    \n    // Partita vinta per resa\n    self.gamedata.socket.on('win by quit', function(data){\n      console.log('Il tuo avversario ha abbandonato la partita');\n      self.end = true;\n      self.score = 1000;\n      self.dataService.patchVictory(self.username);\n    })\n\n    \n    // Cambio posizionamento navi\n    self.verPos = function(click: any){\n      if (this.ver == false) {\n        this.ver = true;\n        document.getElementById(\"cambio\").innerText=\"Stai posizionando in: Verticale\";\n      }\n      else {\n        this.ver = false;\n        document.getElementById(\"cambio\").innerText=\"Stai posizionando in: Orizzontale\";\n      }\n    }\n\n    // Controlla che le navi vengano inserite secondo le regole\n    self.positionCheck = function(row : number, col : number, ship : number) {\n      var _row : number = row;\n      var _col : number = col;\n      var rules = true;   \n\n      if(this.ver){\n        // Posizionamenti verticali all'interno del reticolo ed adiacenza ai lati\n        for (var i = 0; i<ship; i++) {\n          if (_row > (board_size-1)) {\n              rules = false;\n          }\n          console.log(_row + col);\n          if(col == 0 && rules == true){\n            if (this.boards[0].tiles[_row][col+1].value == 1 || this.boards[0].tiles[_row][col].value == 1){\n              rules = false;\n            }\n          }else {\n              if(col == (board_size-1) && rules == true){\n                 if (this.boards[0].tiles[_row][col-1].value == 1 || this.boards[0].tiles[_row][col].value == 1){\n                rules = false;\n                  }\n              }else{\n                  if (rules == true){\n                    if (this.boards[0].tiles[_row][col-1].value == 1 || this.boards[0].tiles[_row][col+1].value == 1 || this.boards[0].tiles[_row][col].value == 1){\n                      rules = false;\n                    }\n                  }\n                }\n            }\n        _row++;\n        }\n      \n        if(row > 0 && rules == true){\n          //controllo posizionamento verticale : barche sopra e sotto\n          if (this.boards[0].tiles[row-1][col].value == 1){\n            rules = false;\n           }   \n        }\n\n        if (rules == true && (row+ship) < board_size && this.boards[0].tiles[row+ship][col].value == 1){\n          rules = false;\n        }  \n\n      }\n      else{\n        // Controllo posizionamento orizzontale : rimanere all'interno del reticolo\n        for (var i = 0; i<ship; i++) {\n          if (_col > (board_size-1)) {\n            rules = false;\n          }\n          console.log(_row + col);\n          if(rules == true && row == 0 ){\n            if (this.boards[0].tiles[row+1][_col].value == 1 || this.boards[0].tiles[row][_col].value == 1){\n              rules = false;\n            }\n          }else{\n              if(rules == true && row == (board_size-1)){\n                if (this.boards[0].tiles[row-1][_col].value == 1 || this.boards[0].tiles[row][_col].value == 1){\n                  rules = false;\n                }\n              }else{\n                  if (rules == true){\n                    if (this.boards[0].tiles[row-1][_col].value == 1 || this.boards[0].tiles[row+1][_col].value == 1 || this.boards[0].tiles[row][_col].value == 1){\n                      rules = false;\n                    }\n                  }\n                }     \n             }\n        _col++;\n        }\n      \n  \n        if(rules == true && col > 0){\n          // Controllo posizionamento verticale : barche sopra e sotto\n          if (this.boards[0].tiles[row][col-1].value == 1){\n            rules = false;\n         }   \n        }\n\n        if (rules == true && (col+ship) < board_size && this.boards[0].tiles[row][col+ship].value == 1){\n          rules = false;\n        }    \n      }\n\n      console.log(this.boards[0]);\n      return rules;\n    } \n   \n    // Posiziona le barche nella board del Giocatore\n    self.shipPositioning = function(click: any) {\n      \n      let id = click.target.id,\n        boardId = 0,\n        row = <number>id.substring(2, 3), col = <number>id.substring(3, 4),\n        tile = this.boards[boardId].tiles[row][col];\n    \n      if (this.ship_array.length == 0) {\n        console.log(\"barche esaurite\");\n        return;\n      }\n\n      if(this.positionCheck(+ row, + col, this.ship_array[0], tile)){\n          for (let i= 0; i < this.ship_array[0]; i++) {\n          \n          if (this.ver == true){\n            this.boards[boardId].tiles[row++][col].value = 1;\n          }\n          else {\n            this.boards[boardId].tiles[row][col++].value = 1;\n          }\n          \n        }\n        this.ship_array.splice(0,1);\n        \n      }\n      else {\n        alert(\"Non ti è consentito mettere una barca qui\");\n      }\n  }\n\n    // Gestisce il click del Giocatore sulla board Avversaria\n    self.onPlayerClick = function(click:any) {\n      \n      let id = click.target.id,\n      row = id.substring(2,3), col = id.substring(3,4),\n      tile = this.boards[1].tiles[row][col];\n      console.log(tile);\n      this.gamedata.socket.emit('on fire', id);\n\n      if (this.checkValidHit(tile)) {\n        if (self.gamedata.turno == self.gamedata.numeroGiocatore) {\n          self.gamedata.socket.emit('click tile', self.gamedata.turno);\n          // Cambia il turno di colui che ha cliccato e manda l'evento all'altro\n          self.gamedata.turno = self.gamedata.turno == \"1\" ? \"2\" : \"1\";\n          console.log(\"Turno di \" + self.gamedata.turno)\n\n          // Nave Colpita\n          if (tile.value == 1) {\n            this.boards[1].tiles[row][col].status = 'hit';\n            this.boards[1].tiles[row][col].value = 2;\n            this.score++;\n            // Controlla se il giocatore ha vinto\n            if(this.score == 27){\n              self.gamedata.socket.emit('on victory', this.username);\n              self.dataService.patchVictory(this.username);\n              this.end = true;\n            }\n          // Nave non Colpita\n          } else {\n              this.boards[1].tiles[row][col].status = 'miss' \n              this.boards[1].tiles[row][col].value = 2;\n            }        \n            return this;\n\n        } else {\n            alert (\"Non è il tuo turno.\")\n          }\n      } else {\n          alert (\"Stai cliccando su una casella che hai già cliccato, riprova\") \n        }\n    }\n\n    // Visualizza il colpo sulla board dell'avversario\n    self.gamedata.socket.on('fire in the hole', function(data) {\n      self.submitPlayerClick(data);\n      console.log(data);\n    })\n    \n    self.submitPlayerClick = function(click:any) {\n      \n      let id = click,\n      row = id.substring(2,3), col = id.substring(3,4),\n      tile = this.boards[0].tiles[row][col];\n      console.log(click);\n        \n\n      if (self.gamedata.turno != self.gamedata.numeroGiocatore) {\n        if (!this.checkValidHit(tile)) {\n            return;\n        }\n        // Nave Colpita\n        if (tile.value == 1) {\n          this.boards[0].tiles[row][col].status = 'hit';\n          // Nave mancata\n        } else {\n              this.boards[0].tiles[row][col].status = 'miss' \n          }\n        return this;\n\n      } \n    }\n\n  }\n\n  // Invio board all'avversario\n  submitBoard(){\n    this.myBoard = this.boards[0].tiles;\n    this.gamedata.socket.emit('submit board', this.boards[0].tiles);\n    this.gamedata.sent = true;\n    console.log(this.boards)\n    return;\n   }\n\n  // Resetta la board in Fase di Posizionamento\n  deleteShips(){\n    this.boards.shift();\n    this.myBoard=this.boardService.createBoard()\n    var fleet = this.ship_duplicate.slice(0);\n    this.ship_array = fleet;\n    console.log(this.ship_duplicate);  \n  }\n\n  // Controlla se una tile è già stata cliccata\n  checkValidHit(tile: any) : boolean {\n    var clickable = true;\n\n    if (tile.value == 2 ) {\n      clickable = false\n    }\n    return clickable;\n  }\n\n  // Ritorna Boards[]\n  get boards () : Board[] {\n    return this.boardService.getBoards()\n  } \n\n  // Gestione dell'uscita dal Game Component\n  canDeactivate() {\n    console.log(this.gamedata.alone);\n    if (this.gamedata.alone) {\n      if(window.confirm('Stai abbandonando la coda, sei sicuro? La tua room verrà distrutta.')){\n        this.gamedata.socket.emit('on leaving queue');\n        return true\n      }\n    } \n\n    if (!this.end) {\n      console.log(this.gamedata.gameId);\n      if(window.confirm('Stai abbandonando la partita, sei sicuro? Ciò porterà ad una sconfitta.')){\n        console.log(this.gamedata.gameId);\n        this.gamedata.socket.emit('on leaving');\n        //this.gamedata.socket.to('' + this.gamedata.gameId).broadcast.emit('on leaving');\n        //non posso fare il to('' + gameId perchè mi dice che non è una funzione???????????)\n        this.dataService.patchVictory(this.username);\n        return true\n      }\n    } \n    else return true;\n  }\n} ","module.exports = \"h1 {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.statistiche {\\r\\n    display: inline-block;\\r\\n    text-align: center;\\r\\n    min-width: 20%\\r\\n}\\r\\n\\r\\n#podio {\\r\\n    margin-bottom: 100px;\\r\\n}\"","module.exports = \"<div class=\\\"statistiche\\\">\\r\\n    <h1>Posizione</h1>\\r\\n</div>\\r\\n<div class=\\\"statistiche\\\">\\r\\n    <h1>Username</h1>\\r\\n</div>\\r\\n<div class=\\\"statistiche\\\">\\r\\n    <h1>Vittorie</h1>\\r\\n</div>\\r\\n<div class=\\\"statistiche\\\">\\r\\n    <h1>Sconfitte</h1>\\r\\n</div>\\r\\n<div class=\\\"statistiche\\\">\\r\\n    <h1>Giocate</h1>\\r\\n</div>\\r\\n\\r\\n<hr>\\r\\n\\r\\n<div id=\\\"podio\\\">\\r\\n    <div *ngFor=\\\"let user of users | slice:0:3; index as i \\\">\\r\\n        <h1 class=\\\"statistiche\\\">{{(i+1 == 1) ? \\\"🥇\\\": ((i+1 == 2) ?\\\"🥈\\\" : \\\"🥉\\\")}}</h1>\\r\\n        <h2 class=\\\"statistiche\\\">{{user.username}}</h2>\\r\\n        <p class=\\\"statistiche\\\">{{user.victories}} </p>\\r\\n        <p class=\\\"statistiche\\\">{{user.defeats}} </p>\\r\\n        <p class=\\\"statistiche\\\">{{user.victories+user.defeats}}</p>\\r\\n        <hr>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<hr>\\r\\n\\r\\n<div *ngFor=\\\"let user of users | slice:3:10; index as i\\\">\\r\\n    <h1 class=\\\"statistiche \\\">{{i+4}}°</h1>\\r\\n    <h2 class=\\\"statistiche \\\">{{user.username}}</h2>\\r\\n    <p class=\\\"statistiche \\\">{{user.victories}} </p>\\r\\n    <p class=\\\"statistiche \\\">{{user.defeats}} </p>\\r\\n    <p class=\\\"statistiche \\\">{{user.victories+user.defeats}}</p>\\r\\n    <hr>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../services/data.service';\r\n\r\nimport {IUser} from '../../interfaces/iuser'\r\n\r\n@Component({\r\n  selector: 'app-leaderboard',\r\n  templateUrl: './leaderboard.component.html',\r\n  styleUrls: ['./leaderboard.component.css']\r\n})\r\nexport class LeaderboardComponent {\r\n  users: IUser[];\r\n\r\n  constructor(public http: DataService) {\r\n  }\r\n\r\n  \r\n  ngOnInit(): void {\r\n    \r\n    // Lista utenti in base al numero di vittorie\r\n    this.http.getLeaderboard().subscribe((data: any) => {\r\n      console.log(data);\r\n      this.users = data.user;    \r\n      console.table(this.users);\r\n     \r\n    })\r\n  }\r\n}\r\n","module.exports = \"/* Form */\\r\\n\\r\\ninput[type=submit] {\\r\\n    border-radius: 38px;\\r\\n    background-color: gainsboro;\\r\\n    min-width: 200px;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #bbb;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.12), 0 2px 4px 0 rgba(0, 0, 0, 0.08);\\r\\n}\\r\\n\\r\\n#form {\\r\\n    background-color: #f3f3f3;\\r\\n    padding: 50px;\\r\\n}\\r\\n\\r\\n#form .flex {\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n#form label {\\r\\n    min-width: 150px;\\r\\n}\\r\\n\\r\\n.searched {\\r\\n    display: block;\\r\\n    padding: 10px;\\r\\n    /* border-radius: 100px; */\\r\\n    min-width: 200px;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.12), 0 2px 4px 0 rgba(0, 0, 0, 0.08);\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n.flex {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n#fail {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.statistiche {\\r\\n    display: inline-block;\\r\\n    text-align: center;\\r\\n    min-width: 25%\\r\\n}\"","module.exports = \"<div>\\n    <div id=\\\"form\\\">\\n        <form>\\n            <div class=\\\"flex\\\">\\n                <label class=\\\"lbl-searched\\\">Utente da cercare</label>\\n                <input type=\\\"text\\\" class=\\\"searched\\\" [(ngModel)]=\\\"searched\\\" name=\\\"searched\\\" required>\\n            </div>\\n\\n            <div class=\\\"flex\\\">\\n                <label> </label>\\n                <input type=\\\"submit\\\" (click)=\\\"userStatistics(searched)\\\">\\n            </div>\\n\\n            <h2 id=\\\"fail\\\"></h2>\\n        </form>\\n    </div>\\n</div>\\n\\n<div class=\\\"info\\\" *ngIf=\\\"statistics\\\">\\n    <hr>\\n\\n    <div class=\\\"statistiche\\\">\\n        <h3>Username</h3>\\n    </div>\\n    <div class=\\\"statistiche\\\">\\n        <h3>Vittorie</h3>\\n    </div>\\n    <div class=\\\"statistiche\\\">\\n        <h3>Sconfitte</h3>\\n    </div>\\n    <div class=\\\"statistiche\\\">\\n        <h3>Giocate</h3>\\n    </div>\\n\\n    <hr>\\n\\n    <div class=\\\"statistiche\\\">\\n        <p id=\\\"username\\\"><strong>{{statistics.username}}</strong></p>\\n    </div>\\n    <div class=\\\"statistiche\\\">\\n        <p>{{statistics.victories}} </p>\\n    </div>\\n    <div class=\\\"statistiche\\\">\\n        <p>{{statistics.defeats}} </p>\\n    </div>\\n    <div class=\\\"statistiche\\\">\\n        <p>{{statistics.victories+statistics.defeats}} </p>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor( private dataService : DataService) { }\n   statistics;\n   searched = \"\";\n\n  ngOnInit() {}\n\n  //Statistiche utente cercato\n  userStatistics(searched) {\n    return this.dataService.getStatistics(searched).subscribe(\n      (data:any) => {\n        console.log(data);\n        this.statistics = data.user;\n        document.getElementById(\"fail\").style.display =\"none\";\n      },\n      err => {\n        console.log(err)\n        document.getElementById(\"fail\").style.display =\"initial\";\n        document.getElementById(\"fail\").innerText=\"I dati inseriti non sono corretti\" \n      }\n    );\n  }\n}\n","module.exports = \"label {\\r\\n    display: inline-block;\\r\\n    min-width: 100px !important;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\ninput {\\r\\n    padding-left: 5px;\\r\\n    padding-right: 5px;\\r\\n    margin-bottom: 5px;\\r\\n    border-radius: 10px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    min-width: 100px;\\r\\n    border-radius: 10px;\\r\\n    background-color: gainsboro;\\r\\n    margin-left: 15px;\\r\\n}\\r\\n\\r\\n#login {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#fail {\\r\\n    color: red;\\r\\n}\"","module.exports = \"<div id=\\\"login\\\">\\r\\n    <h2>Login</h2>\\r\\n    <h3 id=\\\"fail\\\"></h3>\\r\\n    <form class=\\\"form\\\">\\r\\n        <div>\\r\\n            <label>Email</label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"loginUserData.email\\\" name=\\\"email\\\" required>\\r\\n        </div>\\r\\n        <div>\\r\\n            <label>Password</label>\\r\\n            <input type=\\\"password\\\" [(ngModel)]=\\\"loginUserData.password\\\" name=\\\"password\\\" required>\\r\\n        </div>\\r\\n\\r\\n        <button type=\\\"button\\\" (click)=\\\"loginUser()\\\">Login</button>\\r\\n    </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-user-login',\r\n  templateUrl: './user-login.component.html',\r\n  styleUrls: ['./user-login.component.css']\r\n})\r\nexport class UserLoginComponent implements OnInit {\r\n  loginUserData = {}\r\n  constructor(private _auth: AuthService, private _router: Router) {}\r\n\r\n  ngOnInit(){\r\n  }\r\n\r\n  // Esegue il login dell'utente\r\n  loginUser(){\r\n    this._auth.loginUser(this.loginUserData)\r\n    .subscribe(\r\n      res => {\r\n        console.log(res);\r\n        sessionStorage.setItem('token', res.token);\r\n        this._router.navigate([\"/leaderboard\"])\r\n      },\r\n      err => {\r\n        console.log(err)\r\n        document.getElementById(\"fail\").innerText=\"I dati inseriti non sono corretti\"\r\n      }\r\n    )\r\n  }\r\n}\r\n","module.exports = \"label {\\r\\n    display: inline-block;\\r\\n    min-width: 100px !important;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\ninput {\\r\\n    padding-left: 5px;\\r\\n    padding-right: 5px;\\r\\n    margin-bottom: 5px;\\r\\n    border-radius: 10px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    min-width: 100px;\\r\\n    border-radius: 10px;\\r\\n    background-color: gainsboro;\\r\\n    margin-left: 15px;\\r\\n}\\r\\n\\r\\n#registrazione {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#fail {\\r\\n    color: red;\\r\\n}\"","module.exports = \"<div id=\\\"registrazione\\\">\\r\\n    <h2>Registrati Qui!</h2>\\r\\n    <h3 id=\\\"fail\\\"></h3>\\r\\n\\r\\n    <form class=\\\"form \\\">\\r\\n        <div>\\r\\n            <label>Email</label>\\r\\n            <input type=\\\"email\\\" [(ngModel)]=\\\"signupData.email\\\" name=\\\"email\\\" required>\\r\\n        </div>\\r\\n        <div>\\r\\n            <label>Username</label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"signupData.username\\\" name=\\\"username\\\" required>\\r\\n        </div>\\r\\n        <div>\\r\\n            <label>Password</label>\\r\\n            <input type=\\\"password\\\" [(ngModel)]=\\\"signupData.password\\\" name=\\\"password\\\" required>\\r\\n        </div>\\r\\n\\r\\n        <button type=\\\"button\\\" (click)=\\\"registerUser()\\\">Registrati</button>\\r\\n    </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-user-signup',\r\n  templateUrl: './user-signup.component.html',\r\n  styleUrls: ['./user-signup.component.css']\r\n})\r\nexport class UserSignupComponent implements OnInit {\r\n\r\n  signupData = {}\r\n  constructor(private _auth: AuthService,\r\n              private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // Esegue la registrazione dell'utente\r\n  registerUser() {\r\n    this._auth.registerUser(this.signupData)\r\n    .subscribe(\r\n      res => {\r\n        this._router.navigate(['/login'])\r\n      },\r\n      err => { console.log(err)\r\n      document.getElementById(\"fail\").innerText=\"I dati inseriti non sono corretti\"\r\n      }\r\n    )      \r\n  }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  \r\n    constructor( private _authService: AuthService,\r\n                 private _router: Router) { }\r\n\r\n    \r\n    canActivate():boolean {\r\n      if (this._authService.loggedIn()){\r\n        return true\r\n      } else {\r\n        this._router.navigate(['/login'])\r\n        return false\r\n      }\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n  \n  canDeactivate(component : CanComponentDeactivate) {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n  \n}\n","\r\n    export class Player {\r\n        id: string;\r\n        username:string;\r\n        score: number;\r\n  \r\n        constructor(values: Object = {}) {\r\n          Object.assign(this, values);\r\n        }\r\n      }","import { Injectable } from '@angular/core'; \r\nimport { HttpClient } from '@angular/common/http'; \r\nimport { Router } from '@angular/router'; \r\nimport * as JWT from \"jwt-decode\" \r\n \r\n@Injectable() \r\nexport class AuthService {\r\n \r\n \r\n  private _registerUrl = \"http://10.0.2.2:3000/user/signup\"; \r\n  private _loginUrl = \"http://10.0.2.2:3000/user/login\"; \r\n  private _userUrl = \"http://10.0.2.2:3000/user/\"; \r\n \r\n  constructor(private http: HttpClient, \r\n              private _router: Router) { } \r\n \r\n  registerUser(user) { \r\n    return this.http.post<any>(this._registerUrl, user) \r\n  } \r\n\r\n  loginUser(user) { \r\n    return this.http.post<any>(this._loginUrl, user) \r\n     \r\n  } \r\n \r\n  logoutUser() { \r\n    sessionStorage.removeItem('token') \r\n    this._router.navigate(['/']) \r\n  } \r\n   \r\n  getToken() { \r\n    return sessionStorage.getItem('token') \r\n  } \r\n \r\n  loggedIn() { \r\n    return !!sessionStorage.getItem('token')     \r\n  } \r\n \r\n  getId() : string { \r\n    const token = <any>JWT(this.getToken()); \r\n    return token.userId \r\n  } \r\n \r\n  getUsername() { \r\n    const token = <any>JWT(this.getToken()); \r\n    return token.username \r\n  } \r\n \r\n  getEmail() { \r\n    const token = <any>JWT(this.getToken()); \r\n    return token.email \r\n  } \r\n \r\n  isAdmin() : boolean { \r\n    const token = <any>JWT(this.getToken()); \r\n    return token.isAdmin;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Board } from '../board'\r\nimport { Player } from '../player'\r\nimport { AuthService } from './auth.service'\r\n\r\n\r\n@Injectable()\r\nexport class BoardService {\r\n\r\n  boards: Board[] = [];\r\n  \r\n  constructor(private authService: AuthService) { }\r\n\r\n  // Costruisce la board \r\n  createBoard(size: number = 10): Board[] {\r\n    let tiles = [];\r\n    for (let i = 0; i < size; i++) {\r\n      tiles[i] = [];\r\n      for (let j = 0; j < size; j++) {\r\n        tiles[i][j] = {value: 0, status: ''};\r\n      }\r\n    }\r\n\r\n    let board = new Board({\r\n      Player: new Player({ id: this.authService.getId(), username: this.authService.getUsername() }),\r\n      tiles: tiles\r\n    });\r\n    this.boards.unshift(board);\r\n    console.log(this.boards)\r\n    return tiles;\r\n  }\r\n\r\n  // Ritorna le board\r\n  getBoards(): Board[] {\r\n    return this.boards;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';  \r\nimport { HttpClient } from '@angular/common/http'; \r\n \r\n@Injectable() \r\nexport class DataService { \r\n   \r\n  private _userUrl = 'http://10.0.2.2:3000/user/'; \r\n  private _messagesUrl = 'http://10.0.2.2:3000/messages/'; \r\n\r\n  constructor(public http:HttpClient) {  \r\n  } \r\n  \r\n  //Administration Component\r\n  public getUsers(){ \r\n    return this.http.get(this._userUrl); \r\n  }; \r\n\r\n  //Leaderboard Component\r\n  public getLeaderboard(){ \r\n    return this.http.get(this._userUrl + 'leaderboard'); \r\n  }; \r\n \r\n  //Search Component\r\n  public getStatistics(username : string) { \r\n    return this.http.get(this._userUrl + username + \"/statistics\") \r\n  }; \r\n \r\n  //Game Component\r\n  patchVictory(username: string): void{ \r\n    this.http.patch(this._userUrl + username + \"/victory\", null).subscribe((data) => \r\n    console.log('SUCC')); \r\n  } \r\n \r\n  patchDefeat(username: string): void{ \r\n    this.http.patch(this._userUrl + username + \"/defeat\", null).subscribe((data) => \r\n    console.log('SUCC')); \r\n  } \r\n\r\n  //Administration Component\r\n  public upgradeUser(username : string){ \r\n    return this.http.patch(this._userUrl + username + '/upgrade', null).subscribe()\r\n  } \r\n \r\n  public downgradeUser(username : string){ \r\n    return this.http.patch(this._userUrl + username + '/downgrade', null).subscribe()\r\n  } \r\n \r\n  public userDelete(id: string): void{ \r\n    this.http.delete(this._userUrl + id).subscribe()\r\n  } \r\n  \r\n  //Chat Component\r\n  public getChats(username : string) {\r\n    return this.http.get(this._messagesUrl + username + '/conversations');\r\n  }  \r\n\r\n  public getChatsMessages(user1 : string, user2 : string) {\r\n    return this.http.get(this._messagesUrl + user1 + '/' + user2 + '/payload');\r\n  }\r\n\r\n  validRecipient(username : string, callback: Function): any{ \r\n    this.http.get<any>(this._userUrl + username + \"/check\").subscribe((data: any) => { \r\n      callback(data); \r\n    }) \r\n  } \r\n  \r\n  sendMessage(message){ \r\n    return this.http.post<any>(this._messagesUrl, message) \r\n  } \r\n \r\n\r\n  public deleteMessage(id : string){ \r\n    this.http.delete(this._messagesUrl + id).subscribe() \r\n  } \r\n}  \r\n \r\n  ","import { Injectable, Injector} from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService  implements HttpInterceptor{\r\n\r\n  constructor(private injector: Injector) { }\r\n\r\n  intercept(req, next) {\r\n    let authService = this.injector.get(AuthService)\r\n    let tokenizedReq = req.clone({\r\n      setHeaders: {\r\n        Authorization : `Bearer ${authService.getToken()}`\r\n      }\r\n    })\r\n    return next.handle(tokenizedReq)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n","/* (ignored) */"],"sourceRoot":""}